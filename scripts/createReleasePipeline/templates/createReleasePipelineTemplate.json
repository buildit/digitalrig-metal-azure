{
  "isDeleted": false,
  "variables": {
    "docker.imageBase": {
      "value": "${imageName}"
    },
    "storageAccount.containerName": {
      "value": "STORAGE_ACCOUNT_CONTAINER_NAME"
    },
    "storageAccount.key": {
      "value": "STORAGE_ACCOUNT_KEY"
    },
    "storageAccount.url": {
      "value": "STORAGE_ACCOUNT_URL"
    },
    "storageAccount.name": {
      "value": "STORAGE_ACCOUNT_NAME"
    },
    "slackbot.HelloWorldUrl": {
      "value": "SLACKBOT_HELLOWORLD_URL"
    }
  },
  "variableGroups": [],
  "environments": [
    {
      "id": 1,
      "name": "Integration",
      "rank": 1,
      "owner": {
        "id": "${OWNER_ID}"
      },
      "variables": {},
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 1
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": "beforeGates"
        }
      },
      "deployStep": {
        "id": 2
      },"postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 3
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": "afterSuccessfulGates"
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": 6,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": "agentBasedDeployment",
          "name": "Run on agent",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "1.*",
              "name": "Azure CLI ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "${serviceConnectionId}",
                "scriptLocation": "inlineScript",
                "inlineScript": "az group create --name $1 --location $2",
                "args": " ${resourceGroupName} ${location} ",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false"
              }
            },
            {
              "environment": {},
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "1.*",
              "name": "Azure CLI: create or update web app service container",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "${serviceConnectionId}",
                "scriptLocation": "scriptPath",
                "scriptPath": "$(System.DefaultWorkingDirectory)/_buildit_digitalrig-metal-azure/scripts/createReleasePipeline/bashScripts/createResources.sh",
                "inlineScript": "",
                "args": "${resourceGroupName} ${appName} ${registryName}.azurecr.io ${imageName}:unstable-latest",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false"
              }
            },
            {
              "environment": {},
              "taskId": "e28912f1-0114-4464-802a-a3a35437fd16",
              "version": "1.*",
              "name": "Build an image",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "${serviceConnectionId}",
                "azureContainerRegistry": "${registryAddress}",
                "command": "Build an image",
                "dockerFile": "$(System.DefaultWorkingDirectory)/$(Build.DefinitionName)/Source Code/Dockerfile_e2e_test",
                "arguments": "--no-cache --build-arg STORAGE_ACCT_URL=\"$(storageAccount.url)\" --build-arg STORAGE_ACCT_KEY=\"$(storageAccount.key)\" --build-arg BUILD_NUMBER=\"$(Build.BuildNumber)\" --build-arg SLACKBOT_HELLO_URL=\"$(slackbot.HelloWorldUrl)\" ",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "$(docker.imageBase):e2e-test-$(Build.BuildId)",
                "imageNamesPath": "",
                "qualifyImageName": "true",
                "includeSourceTags": "false",
                "includeLatestTag": "false",
                "addDefaultLabels": "true",
                "useDefaultContext": "true",
                "buildContext": "",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "",
                "envVars": "",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
              }
            },
            {
              "environment": {},
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "1.*",
              "name": "Download E2E Test Report ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "${serviceConnectionId}",
                "scriptLocation": "inlineScript",
                "inlineScript": "export AZURE_STORAGE_ACCOUNT=$1\nexport AZURE_STORAGE_KEY=$2\nexport CONTAINER_NAME=$3\nexport BUILD_NUMBER=$4\nexport WORKING_DIRECTORY=$5\n\nexport container_name=${CONTAINER_NAME}\nexport blob_name=\"E2E_TestReport_${BUILD_NUMBER}.xml\"\nexport destination_file=${WORKING_DIRECTORY}/TestReport.xml\n\necho \"Downloading the file...\"\naz storage blob download --container-name $container_name --name $blob_name --file $destination_file --output table\n",
                "args": "$(storageAccount.name) $(storageAccount.key) $(storageAccount.containerName) $(Build.BuildNumber) $(System.DefaultWorkingDirectory)",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false"
              }
            },
            {
              "environment": {},
              "taskId": "0b0f01ed-7dde-43ff-9cbb-e48954daf9b1",
              "version": "2.*",
              "name": "Publish Test Results TestReport.xml",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "testRunner": "JUnit",
                "testResultsFiles": "TestReport.xml",
                "searchFolder": "$(System.DefaultWorkingDirectory)",
                "mergeTestResults": "false",
                "failTaskOnFailedTests": "false",
                "testRunTitle": "",
                "platform": "",
                "configuration": "",
                "publishRunAttachments": "true"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "ReleaseStarted",
          "conditionType": "event",
          "value": ""
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": []
      }
  ],
  "artifacts": [
    {
      "sourceId": "cee48beb-f0d3-4354-85eb-f4df096ae837:buildit/digitalrig-metal-azure",
      "type": "GitHub",
      "alias": "_buildit_digitalrig-metal-azure",
      "definitionReference": {
        "branch": {
          "id": "dev",
          "name": "dev"
        },
        "checkoutNestedSubmodules": {
          "id": "True",
          "name": "Any nested submodules within"
        },
        "checkoutSubmodules": {
          "id": "",
          "name": ""
        },
        "connection": {
          "id": "cee48beb-f0d3-4354-85eb-f4df096ae837",
          "name": "Github service connection-x3nuwb"
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestFromBranchType",
          "name": "Latest from the default branch"
        },
        "definition": {
          "id": "buildit/digitalrig-metal-azure",
          "name": "buildit/digitalrig-metal-azure"
        },
        "fetchDepth": {
          "id": "",
          "name": ""
        },
        "gitLfsSupport": {
          "id": "",
          "name": ""
        },
        "artifactSourceDefinitionUrl": {
          "id": "https://github.com/buildit/digitalrig-metal-azure",
          "name": ""
        }
      },
      "isRetained": false
    },
    {
      "sourceId": "${projectId}:${pipelineId}",
      "type": "Build",
      "alias": "${sourcePipelineName}",
      "definitionReference": {
        "defaultVersionBranch": {
          "id": "",
          "name": ""
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestType",
          "name": "Latest"
        },
        "definition": {
          "id": "${pipelineId}",
          "name": "${sourcePipelineName}"
        },
        "project": {
          "id": "${projectId}",
          "name": "BuilditAzureRig"
        },
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/${orgName}/_permalink/_build/index?collectionId=$(System.CollectionId)&projectId=${projectId}&definitionId=${pipelineId}",
          "name": ""
        }
      },
      "isPrimary": true,
      "isRetained": false
    }
  ],
  "triggers": [
    {
      "artifactAlias": "${sourcePipelineName}",
      "triggerConditions": [],
      "triggerType": "artifactSource"
    }
  ],
  "releaseNameFormat": "Release-$(rev:r)",
  "tags": [],
  "pipelineProcess": {
    "type": "designer"
  },
  "properties": {
    "DefinitionCreationSource": {
      "$type": "System.String",
      "$value": "ReleaseNew"
    }
  },
  "name": "${pipelineName}",
  "path": "\\"
}
