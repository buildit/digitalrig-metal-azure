{
  "isDeleted": false,
  "variables": {},
  "variableGroups": [],
  "environments": [
    {
      "id": 1,
      "name": "Staging",
      "rank": 1,
      "owner": {
        "id": "${OWNER_ID}"
      },
      "variables": {},
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 1
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": "beforeGates"
        }
      },
      "deployStep": {
        "id": 2
      },"postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": false,
            "isNotificationOn": false,
            "id": 3,
            "approver": {
              "id": "${OWNER_ID}"
            }
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": true,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": "afterSuccessfulGates"
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": 6,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": "agentBasedDeployment",
          "name": "Run on agent",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "1.*",
              "name": "Azure CLI ",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "${serviceConnectionId}",
                "scriptLocation": "inlineScript",
                "scriptPath": "createResourceGroup.sh",
                "inlineScript": "az group create --name $1 --location $2",
                "args": " ${resourceGroupName}${stage1} ${location} ",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false"
              }
            },
            {
              "environment": {},
              "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "version": "1.*",
              "name": "Azure CLI: create or update web app service container",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "connectedServiceNameARM": "${serviceConnectionId}",
                "scriptLocation": "inlineScript",
                "scriptPath": "",
                "inlineScript": "az appservice plan create --resource-group $1 \\\n--name $2-plan \\\n--is-linux \\\n--sku B1\n\naz webapp create --resource-group $1 \\\n--plan $2-plan \\\n--name $2 \\\n--runtime \"python|2.7\"\n\naz webapp config container set --resource-group $1 \\\n--name $2 \\\n--docker-custom-image-name $3/$4 \\\n--docker-registry-server-url https://$3",
                "args": "${resourceGroupName}${stage1} ${appName}${stage1} ${registryName}.azurecr.io ${imageName}:$(Build.BuildId)",
                "addSpnToEnvironment": "false",
                "useGlobalConfig": "false",
                "cwd": "",
                "failOnStandardError": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "ReleaseStarted",
          "conditionType": "event",
          "value": ""
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": []
      },
      {
        "id": 2,
        "name": "Production",
        "rank": 2,
        "owner": {
          "id": "${OWNER_ID}"
        },
        "variables": {},
        "variableGroups": [],
        "preDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 1
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": "beforeGates"
          }
        },
        "deployStep": {
          "id": 3
        },"postDeployApprovals": {
          "approvals": [
            {
              "rank": 1,
              "isAutomated": true,
              "isNotificationOn": false,
              "id": 3
            }
          ],
          "approvalOptions": {
            "requiredApproverCount": null,
            "releaseCreatorCanBeApprover": false,
            "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
            "enforceIdentityRevalidation": false,
            "timeoutInMinutes": 0,
            "executionOrder": "afterSuccessfulGates"
          }
        },
        "deployPhases": [
          {
            "deploymentInput": {
              "parallelExecution": {
                "parallelExecutionType": "none"
              },
              "skipArtifactsDownload": false,
              "artifactsDownloadInput": {
                "downloadInputs": []
              },
              "queueId": 6,
              "demands": [],
              "enableAccessToken": false,
              "timeoutInMinutes": 0,
              "jobCancelTimeoutInMinutes": 1,
              "condition": "succeeded()",
              "overrideInputs": {}
            },
            "rank": 1,
            "phaseType": "agentBasedDeployment",
            "name": "Run on agent",
            "refName": null,
            "workflowTasks": [
              {
                "environment": {},
                "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                "version": "1.*",
                "name": "Azure CLI ",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "connectedServiceNameARM": "${serviceConnectionId}",
                  "scriptLocation": "inlineScript",
                  "scriptPath": "createResourceGroup.sh",
                  "inlineScript": "az group create --name $1 --location $2",
                  "args": " ${resourceGroupName}${stage2} ${location} ",
                  "addSpnToEnvironment": "false",
                  "useGlobalConfig": "false",
                  "cwd": "",
                  "failOnStandardError": "false"
                }
              },
              {
                "environment": {},
                "taskId": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                "version": "1.*",
                "name": "Azure CLI: create or update web app service container",
                "refName": "",
                "enabled": true,
                "alwaysRun": false,
                "continueOnError": false,
                "timeoutInMinutes": 0,
                "definitionType": "task",
                "overrideInputs": {},
                "condition": "succeeded()",
                "inputs": {
                  "connectedServiceNameARM": "${serviceConnectionId}",
                  "scriptLocation": "inlineScript",
                  "scriptPath": "",
                  "inlineScript": "az appservice plan create --resource-group $1 \\\n--name $2-plan \\\n--is-linux \\\n--sku B1\n\naz webapp create --resource-group $1 \\\n--plan $2-plan \\\n--name $2 \\\n--runtime \"python|2.7\"\n\naz webapp config container set --resource-group $1 \\\n--name $2 \\\n--docker-custom-image-name $3/$4 \\\n--docker-registry-server-url https://$3",
                  "args": "${resourceGroupName}${stage2} ${appName}${stage2} ${registryName}.azurecr.io ${imageName}:$(Build.BuildId)",
                  "addSpnToEnvironment": "false",
                  "useGlobalConfig": "false",
                  "cwd": "",
                  "failOnStandardError": "false"
                }
              }
            ]
          }
        ],
        "environmentOptions": {
          "emailNotificationType": "OnlyOnFailure",
          "emailRecipients": "release.environment.owner;release.creator",
          "skipArtifactsDownload": false,
          "timeoutInMinutes": 0,
          "enableAccessToken": false,
          "publishDeploymentStatus": true,
          "badgeEnabled": false,
          "autoLinkWorkItems": false,
          "pullRequestDeploymentEnabled": false
        },
        "demands": [],
        "conditions": [
          {
            "name": "Staging",
            "conditionType": "environmentState",
            "value": "4"
          }
        ],
        "executionPolicy": {
          "concurrencyCount": 1,
          "queueDepthCount": 0
        },
        "schedules": [],
        "retentionPolicy": {
          "daysToKeep": 30,
          "releasesToKeep": 3,
          "retainBuild": true
        },
        "processParameters": {},
        "properties": {},
        "preDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "postDeploymentGates": {
          "id": 0,
          "gatesOptions": null,
          "gates": []
        },
        "environmentTriggers": []
        }

  ],
  "artifacts": [
    {
      "sourceId": "${projectId}:${pipelineId}",
      "type": "Build",
      "alias": "${sourcePipelineName}",
      "definitionReference": {
        "defaultVersionBranch": {
          "id": "",
          "name": ""
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestType",
          "name": "Latest"
        },
        "definition": {
          "id": "${pipelineId}",
          "name": "${sourcePipelineName}"
        },
        "project": {
          "id": "${projectId}",
          "name": "BuilditAzureRig"
        },
        "artifactSourceDefinitionUrl": {
          "id": "https://dev.azure.com/${orgName}/_permalink/_build/index?collectionId=$(System.CollectionId)&projectId=${projectId}&definitionId=${pipelineId}",
          "name": ""
        }
      },
      "isPrimary": true,
      "isRetained": false
    }
  ],
  "triggers": [
    {
      "artifactAlias": "${sourcePipelineName}",
      "triggerConditions": [],
      "triggerType": "artifactSource"
    }
  ],
  "releaseNameFormat": "Release-$(rev:r)",
  "tags": [],
  "pipelineProcess": {
    "type": "designer"
  },
  "properties": {
    "DefinitionCreationSource": {
      "$type": "System.String",
      "$value": "ReleaseNew"
    }
  },
  "name": "${pipelineName}",
  "path": "\\"
}
