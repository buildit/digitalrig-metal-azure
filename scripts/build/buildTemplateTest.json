{
    "triggers": [
      {
        "branchFilters": [
          "+azuredevops"
        ],
        "pathFilters": [
          "+/"
        ],
        "batchChanges": true,
        "maxConcurrentBuildsPerBranch": 1,
        "triggerType": "continuousIntegration"
      }
    ],
    "variables": {
      "system.debug": {
        "value": "false",
        "allowOverride": true
      }
    },
    "properties": {},
    "tags": [],
    "_links": {
      "self": {
        "href": "https://dev.azure.com/rigtest/$projectId/_apis/build/Definitions/$idNumber?revision=1"
      },
      "web": {
        "href": "https://dev.azure.com/rigtest/$projectId/_build/definition?definitionId=$idNumber"
      },
      "editor": {
        "href": "https://dev.azure.com/rigtest/$projectId/_build/designer?id=$idNumber&_a=edit-build-definition"
      },
      "badge": {
        "href": "https://dev.azure.com/rigtest/$projectId/_apis/build/status/$idNumber"
      }
    },
    "buildNumberFormat": "$(date:yyyyMMdd)$(rev:.r)",
    "jobAuthorizationScope": "projectCollection",
    "process": {
      "phases": [
        {
          "steps": [
            {
              "environment": {},
              "enabled": true,
              "continueOnError": false,
              "alwaysRun": false,
              "displayName": "Azure Deployment:Create Azure Container Registry",
              "timeoutInMinutes": 0,
              "condition": "succeeded()",
              "task": {
                "id": "94a74903-f93f-4075-884f-dc11f34058b4", // can this be generated ?
                "versionSpec": "2.*",
                "definitionType": "task"
              },
              "inputs": {
                "ConnectedServiceName": "$serviceConnectionId", // made from create service connection
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$resourceGroup",
                "location": "South Central US",
                "templateLocation": "URL of the file",
                "csmFileLink": "https://raw.githubusercontent.com/Microsoft/devops-project-samples/057f6cc268a62922d012067d069d58684e967d0a/armtemplates/webapp-containers/containerRegistry-template.json",
                "csmParametersFileLink": "",
                "csmFile": "",
                "csmParametersFile": "",
                "overrideParameters": "-registryName \"$registryName\" -registryLocation \"$location\" -registrySku \"Basic\"", //registryName and location should be defined elseware
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentOutputs": ""
              }
            },
            {
              "environment": {},
              "enabled": true,
              "continueOnError": false,
              "alwaysRun": false,
              "displayName": "Build an image",
              "timeoutInMinutes": 0,
              "task": {
                "id": "e28912f1-0114-4464-802a-a3a35437fd16",//can this be generated?
                "versionSpec": "1.*",
                "definitionType": "task"
              },
              "inputs": {
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "$subscriptionId", //generated in create service connection
                "azureContainerRegistry": "$registryName", //should be defined elsewhere 
                "command": "Build an image",
                "dockerFile": "**/Dockerfile",
                "arguments": "",
                "useDefaultContext": "true",
                "buildContext": "",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "$imageName:$(Build.BuildId)", //name of image might be defined elsewhere
                "imageNamesPath": "",
                "qualifyImageName": "true",
                "includeSourceTags": "false",
                "includeLatestTag": "false",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "",
                "envVars": "",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
              }
            },
            {
              "environment": {},
              "enabled": true,
              "continueOnError": false,
              "alwaysRun": false,
              "displayName": "Push an image",
              "timeoutInMinutes": 0,
              "task": {
                "id": "e28912f1-0114-4464-802a-a3a35437fd16",// can this be generated
                "versionSpec": "1.*",
                "definitionType": "task"
              },
              "inputs": {
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "$subcriptionId",
                "azureContainerRegistry": "{\"loginServer\":\"$registryName\", \"id\" : \"/subscriptions/$subscriptionId/resourceGroups/$resourceGroupName/providers/Microsoft.ContainerRegistry/registries/$registryName\"}",//subscriptions and registry defined earlier
                "command": "Push an image",
                "dockerFile": "**/Dockerfile",
                "arguments": "",
                "useDefaultContext": "true",
                "buildContext": "",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "$imageName:$(Build.BuildId)", //get image name
                "imageNamesPath": "",
                "qualifyImageName": "true",
                "includeSourceTags": "false",
                "includeLatestTag": "false",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "",
                "envVars": "",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
              }
            }
          ],
          "name": null,
          "refName": "Phase_1",
          "target": {
            "executionOptions": null,
            "allowScriptsAuthAccessOption": false,
            "type": 1
          },
          "jobAuthorizationScope": 0
        }
      ],
      "type": 1
    },//TODO how to connect to repository programatically
    "repository": {
      "properties": {
        "fetchDepth": "0",
        "connectedServiceId": "d3c019da-80e8-41d8-b2be-013a0c11fe2d",
        "apiUrl": "https://api.github.com/repos/buildit/digitalrig-metal-azure",
        "branchesUrl": "https://api.github.com/repos/buildit/digitalrig-metal-azure/branches",
        "cloneUrl": "https://github.com/buildit/digitalrig-metal-azure.git",
        "refsUrl": "https://api.github.com/repos/buildit/digitalrig-metal-azure/git/refs",
        "defaultBranch": "azuredevops",
        "fullName": "buildit/digitalrig-metal-azure",
        "labelSources": "0"
      },
      "id": "buildit/digitalrig-metal-azure",
      "type": "GitHub",
      "name": "buildit/digitalrig-metal-azure",
      "url": "https://github.com/buildit/digitalrig-metal-azure.git",
      "defaultBranch": "azuredevops",
      "clean": "false",
      "checkoutSubmodules": false
    },
    "processParameters": {},
    "quality": "definition",
    "authoredBy": {
      "displayName": "David Burkhalter",
      "url": "https://app.vssps.visualstudio.com/A7f95b4c6-b51c-4393-9dc2-5bd38e2fd173/_apis/Identities/473a0743-9bf5-6d3a-b4b6-fb457eff9c00",
      "_links": {
        "avatar": {
          "href": "https://dev.azure.com/rigtest/_apis/GraphProfile/MemberAvatars/aad.NDczYTA3NDMtOWJmNS03ZDNhLWI0YjYtZmI0NTdlZmY5YzAw"
        }
      },
      "id": "",
      "uniqueName": "d2.burkhalter@gmail.com",
      "imageUrl": "https://dev.azure.com/rigtest/_api/_common/identityImage?id=473a0743-9bf5-6d3a-b4b6-fb457eff9c00",
      "descriptor": "aad.NDczYTA3NDMtOWJmNS03ZDNhLWI0YjYtZmI0NTdlZmY5YzAw"
    },
    "drafts": [],
    "queue": {
      "_links": {
        "self": {
          "href": "https://dev.azure.com/rigtest/_apis/build/Queues/48"
        }
      },
      "id": 48,
      "name": "Hosted Ubuntu 1604",
      "url": "https://dev.azure.com/rigtest/_apis/build/Queues/48",
      "pool": {
        "id": 6,
        "name": "Hosted Ubuntu 1604",
        "isHosted": true
      }
    },
    "id": $idNumber,
    "name": "$pipelineName",
    "url": "https://dev.azure.com/rigtest/$projectId/_apis/build/Definitions/$idNumber?revision=1",
    "uri": "vstfs:///Build/Definition/$idNumber",
    "path": "\\",
    "type": "build",
    "queueStatus": "enabled",
    "revision": 1,
    "createdDate": "2019-02-19T17:11:52.1Z",
    "project": {
      "id": "$projectId",
      "name": "$projectName",
      "url": "https://dev.azure.com/rigtest/_apis/projects/$projectId",
      "state": "wellFormed",
      "revision": 83,
      "visibility": "private",
      "lastUpdateTime": "2019-02-19T17:11:55.38Z"
    }
  }
  